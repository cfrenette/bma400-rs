#[derive(Clone, Copy)]
pub enum Register {
    ChipId = 0x00,
    ErrReg = 0x02,
    Status = 0x03,
    AccXLSB = 0x04,
    AccXMSB = 0x05,
    AccYLSB = 0x06,
    AccYMSB = 0x07,
    AccZLSB = 0x08,
    AccZMSB = 0x09,
    SensorTime0 = 0x0A,
    SensorTime1 = 0x0B,
    SensorTime2 = 0x0C,
    Event = 0x0D,
    InterruptStatus0 = 0x0E,
    InterruptStatus1 = 0x0F,
    InterruptStatus2 = 0x10,
    TempData = 0x11,
    FifoLength0 = 0x12,
    FifoLength1 = 0x13,
    StepCount0 = 0x15,
    StepCount1 = 0x16,
    StepCount2 = 0x17,
    AccConfig0 = 0x19,
    AccConfig1 = 0x1A,
    AccConfig2 = 0x1B,
    IntConfig0 = 0x1F,
    IntConfig1 = 0x20,
    IntMap1 = 0x21,
    IntMap2 = 0x22,
    IntMap12 = 0x23,
    IntIOCtrl = 0x24,
    FifoConfig0 = 0x26,
    FifoConfig1 = 0x27,
    FifoConfig2 = 0x28,
    FifoPwrConfig = 0x29,
    AutoLowPow0 = 0x2A,
    AutoLowPow1 = 0x2B,
    AutoWakeup0 = 0x2C,
    AutoWakeup1 = 0x2D,
    WkupIntConfig0 = 0x2F,
    WkupIntConfig1 = 0x30,
    WkupIntConfig2 = 0x31,
    WkupIntConfig3 = 0x32,
    WkupIntConfig4 = 0x33,
    OrientChgConfig0 = 0x35,
    OrientChgConfig1 = 0x36,
    // There really is no 2
    OrientChgConfig3 = 0x38,
    OrientChgConfig4 = 0x39,
    OrientChgConfig5 = 0x3A,
    OrientChgConfig6 = 0x3B,
    OrientChgConfig7 = 0x3C,
    OrientChgConfig8 = 0x3D,
    OrientChgConfig9 = 0x3E,
    GenInt1Config0 = 0x3F,
    GenInt1Config1 = 0x40,
    GenInt1Config2 = 0x41,
    GenInt1Config3 = 0x42,
    // Not a typo
    GenInt1Config31 = 0x43,
    GenInt1Config4 = 0x44,
    GenInt1Config5 = 0x45,
    GenInt1Config6 = 0x46,
    GenInt1Config7 = 0x47,
    GenInt1Config8 = 0x48,
    GenInt1Config9 = 0x49,
    GenInt2Config0 = 0x4A,
    GenInt2Config1 = 0x4B,
    GenInt2Config2 = 0x4C,
    GenInt2Config3 = 0x4D,
    // Again, not a typo
    GenInt2Config31 = 0x4E,
    GenInt2Config4 = 0x4F,
    GenInt2Config5 = 0x50,
    GenInt2Config6 = 0x51,
    GenInt2Config7 = 0x52,
    GenInt2Config8 = 0x53,
    GenInt2Config9 = 0x54,
    ActChgConfig0 = 0x55,
    ActChgConfig1 = 0x56,
    TapConfig0 = 0x57,
    TapConfig1 = 0x58,
    InterfaceConfig = 0x7C,
    SelfTest = 0x7D,
    Cmd = 0x7E,
}

impl From<Register> for u8 {
    fn from(value: Register) -> Self {
        match value {
            Register::ChipId => 0x00,
            Register::ErrReg => 0x02,
            Register::Status => 0x03,
            Register::AccXLSB => 0x04,
            Register::AccXMSB => 0x05,
            Register::AccYLSB => 0x06,
            Register::AccYMSB => 0x07,
            Register::AccZLSB => 0x08,
            Register::AccZMSB => 0x09,
            Register::SensorTime0 => 0x0A,
            Register::SensorTime1 => 0x0B,
            Register::SensorTime2 => 0x0C,
            Register::Event => 0x0D,
            Register::InterruptStatus0 => 0x0E,
            Register::InterruptStatus1 => 0x0F,
            Register::InterruptStatus2 => 0x10,
            Register::TempData => 0x11,
            Register::FifoLength0 => 0x12,
            Register::FifoLength1 => 0x13,
            Register::StepCount0 => 0x15,
            Register::StepCount1 => 0x16,
            Register::StepCount2 => 0x17,
            Register::AccConfig0 => 0x19,
            Register::AccConfig1 => 0x1A,
            Register::AccConfig2 => 0x1B,
            Register::IntConfig0 => 0x1F,
            Register::IntConfig1 => 0x20,
            Register::IntMap1 => 0x21,
            Register::IntMap2 => 0x22,
            Register::IntMap12 => 0x23,
            Register::IntIOCtrl => 0x24,
            Register::FifoConfig0 => 0x26,
            Register::FifoConfig1 => 0x27,
            Register::FifoConfig2 => 0x28,
            Register::FifoPwrConfig => 0x29,
            Register::AutoLowPow0 => 0x2A,
            Register::AutoLowPow1 => 0x2B,
            Register::AutoWakeup0 => 0x2C,
            Register::AutoWakeup1 => 0x2D,
            Register::WkupIntConfig0 => 0x2F,
            Register::WkupIntConfig1 => 0x30,
            Register::WkupIntConfig2 => 0x31,
            Register::WkupIntConfig3 => 0x32,
            Register::WkupIntConfig4 => 0x33,
            Register::OrientChgConfig0 => 0x35,
            Register::OrientChgConfig1 => 0x36,
            // There really is no 2
            Register::OrientChgConfig3 => 0x38,
            Register::OrientChgConfig4 => 0x39,
            Register::OrientChgConfig5 => 0x3A,
            Register::OrientChgConfig6 => 0x3B,
            Register::OrientChgConfig7 => 0x3C,
            Register::OrientChgConfig8 => 0x3D,
            Register::OrientChgConfig9 => 0x3E,
            Register::GenInt1Config0 => 0x3F,
            Register::GenInt1Config1 => 0x40,
            Register::GenInt1Config2 => 0x41,
            Register::GenInt1Config3 => 0x42,
            // Not a typo
            Register::GenInt1Config31 => 0x43,
            Register::GenInt1Config4 => 0x44,
            Register::GenInt1Config5 => 0x45,
            Register::GenInt1Config6 => 0x46,
            Register::GenInt1Config7 => 0x47,
            Register::GenInt1Config8 => 0x48,
            Register::GenInt1Config9 => 0x49,
            Register::GenInt2Config0 => 0x4A,
            Register::GenInt2Config1 => 0x4B,
            Register::GenInt2Config2 => 0x4C,
            Register::GenInt2Config3 => 0x4D,
            // Again, not a typo
            Register::GenInt2Config31 => 0x4E,
            Register::GenInt2Config4 => 0x4F,
            Register::GenInt2Config5 => 0x50,
            Register::GenInt2Config6 => 0x51,
            Register::GenInt2Config7 => 0x52,
            Register::GenInt2Config8 => 0x53,
            Register::GenInt2Config9 => 0x54,
            Register::ActChgConfig0 => 0x55,
            Register::ActChgConfig1 => 0x56,
            Register::TapConfig0 => 0x57,
            Register::TapConfig1 => 0x58,
            Register::InterfaceConfig => 0x7C,
            Register::SelfTest => 0x7D,
            Register::Cmd => 0x7E,
        }
    }
}

impl Register {
    pub fn read_only(&self) -> bool {
        todo!()
    }
}